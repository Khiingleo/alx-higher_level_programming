# test cases for the MyList class

import module
>>> MyList = __import__('1-my_list').MyList

Test cases:
Test with integers:
	>>> my_list = MyList()
	>>> my_list.append(3)
	>>> my_list.append(10)
	>>> my_list.append(-2)
	>>> print(my_list)
	[3, 10, -2]
	>>> my_list.print_sorted()
	[-2, 3, 10]
	>>> print(my_list)
	[3, 10, -2]

	>>> test1 = MyList([5, 3, 1, 4, 2])
	>>> print(test1)
	[5, 3, 1, 4, 2]
	>>> test1.print_sorted()
	[1, 2, 3, 4, 5]
	>>> print(test1)
	[5, 3, 1, 4, 2]

	>>> my_list = MyList([30])
	>>> print(my_list)
	[30]
	>>> my_list.print_sorted()
	[30]

Test with empty list:
	>>> empty_list = MyList([])
	>>> print(empty_list)
	[]
	>>> empty_list.print_sorted()
	[]

Test with strings:
	>>> test_string = MyList(['banana', 'apple', 'cherry'])
	>>> print(test_string)
	['banana', 'apple', 'cherry']
	>>> test_string.print_sorted()
	['apple', 'banana', 'cherry']

Test with duplicate elements:
	>>> lists = MyList([2, 1, 3, 2, 1])
	>>> lists.print_sorted()
	[1, 1, 2, 2, 3]

Test types:
	>>> type(MyList())
	<class '1-my_list.MyList'>

	>>> isinstance(MyList, list)
	False

	>>> issubclass(MyList, list)
	True
